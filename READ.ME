/Authentication_system
|-- frontend
|   |-- components
|   |   |-- common
|   |   |   |-- __init__.py
|   |   |   |-- header.py
|   |   |   |-- footer.py
|   |   |-- login
|   |   |   |-- __init__.py
|   |   |   |-- login_form.py
|   |   |   |-- login_button.py
|   |   |-- signup
|   |   |   |-- __init__.py
|   |   |   |-- signup_form.py
|   |   |   |-- signup_button.py
|   |   |-- dashboard
|   |       |-- __init__.py
|   |       |-- dashboard_content.py
|   |-- pages
|   |   |-- __init__.py
|   |   |-- home.py
|   |   |-- login.py
|   |   |-- signup.py
|   |   |-- dashboard.py
|   |-- menu
|   |   |-- __init__.py
|   |   |-- sidebar.py
|   |-- static
|   |   |-- styles
|   |   |   |-- main.css
|   |   |-- images
|   |       |-- logo.png
|   |-- templates
|       |-- (other_template_1.html)
|       |-- (other_template_2.html)
|   |-- __init__.py
|   |-- app.py  # Streamlit app file
|-- backend
|   |-- algo_env
|   |-- config
|   |   |-- config.py
|   |-- database
|   |   |-- database.py
|   |   |-- models.py
|   |   |-- session.py
|   |-- routes
|   |   |-- __init__.py
|   |   |-- login.py
|   |   |-- register.py
|   |   |-- reset_password.py
|   |   |-- schemas.py
|   |-- services
|   |   |-- auth_service.py
|   |-- settings
|   |   |-- secret_keygen.py
|   |-- main.py
|   |-- requirements.txt
|   |-- .gitignore
|   |-- test.py
|-- .gitignore
|-- README.md

# Project Setup Guide

## Prerequisites
- PostgreSQL database is required.
- Python 3.x installed on your system.

## Setup Instructions

1. Clone the repository to your local machine:

```bash
git clone <repository_url>
```

2. Create a JSON configuration file in the `config` directory with the following structure:

```json
{
    "backend_url": "http://127.0.0.1:8000",
    "frontend_url": "http://0.0.0.0:8501"
}
```

3. Inside the `backend/config` directory, create two files: `database.ini` and `email.ini`.

4. Populate `database.ini` with the PostgreSQL database connection details:

```ini
[postgresql]
user = username
password = password
database = user_management_db
host = localhost
port = 5432
```

5. Populate `email.ini` with the SMTP server and email credentials:

```ini
[SMTP]
server = smtp.zoho.eu
port = 587

[Credentials]
domain = xbot.capital
sender_email = noreply@xbot.capital
password = password
```

6. Install the required Python packages by running:

```bash
pip install -r requirements.txt
```

7. Optionally, create a virtual environment and activate it.

8. Run the `backend/database/model.py` file to create necessary database tables:

```bash
python backend/database/model.py
```
9. Go to the user_management_db and run the following command:
INSERT INTO roles (role_name) VALUES
    ('regular user'),
    ('admin');

10. Navigate to the `backend` directory and start the backend server using the following command:

```bash
uvicorn app:app --reload
```

11. In another terminal, navigate to the `frontend` directory and start the frontend server:

```bash
streamlit run app.py
```

Optionally, if you are running it on a remote server, use the command:

```bash
streamlit run app.py --server.address=0.0.0.0
```

Now, you should be able to access the application by visiting the frontend URL specified in the configuration file.